name: CI
on: [push]
env:
  SPRING_PROFILES_ACTIVE: ci
jobs:
  step-0-application-without-security:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: java-${{ matrix.java }} step-0-application-without-security
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.node
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/setup-node@v1
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: command -v docker >/dev/null 2>&1 || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: sudo apt-get install -y httpie
    - run: npm i -g wait-port
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-0-application-without-security
    - run: ( bash $GITHUB_WORKSPACE/step-0-application-without-security/target/*jar --spring.profiles.active=ci & ) || echo ...
    - run: wait-port 8080
    - run: http get :8080
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-0-test-application-without-security -Dgroups=e2e
    - run: http --ignore-stdin post :8080/actuator/shutdown
  step-1-default-spring-security:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: java-${{ matrix.java }} step-1-default-spring-security
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.node
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/setup-node@v1
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: type docker >/dev/null 2>&1 || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: sudo apt-get install -y httpie
    - run: npm i -g wait-port
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-1-default-spring-security
    - run: ( bash $GITHUB_WORKSPACE/step-1-default-spring-security/target/*jar & ) || echo ...
    - run: wait-port 8080
    - run: http get :8080
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-1-test-default-spring-security -Dgroups=e2e -Pci
    - run: http --ignore-stdin -a user:pwd post :8080/actuator/shutdown
  step-2-custom-authentication:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: java-${{ matrix.java }} step-2-custom-authentication
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.node
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/setup-node@v1
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: hash docker 2>/dev/null || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: sudo apt-get install -y httpie
    - run: npm i -g wait-port
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-2-custom-authentication
    - run: ( bash $GITHUB_WORKSPACE/step-2-custom-authentication/target/*jar & ) || echo ...
    - run: wait-port 8080
    - run: http get :8080
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-2-test-custom-authentication -Dgroups=e2e
    - run: http --ignore-stdin -a user:pwd post :8080/actuator/shutdown
  step-3-authorization:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: java-${{ matrix.java }} step-3-authorization
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.node
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/setup-node@v1
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: hash docker 2>/dev/null || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: sudo apt-get install -y httpie
    - run: npm i -g wait-port
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-3-authorization
    - run: ( bash $GITHUB_WORKSPACE/step-3-authorization/target/*jar & ) || echo ...
    - run: wait-port 8080
    - run: http get :8080
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-3-test-authorization -Dgroups=e2e
    - run: http --ignore-stdin post :8080/actuator/shutdown
  step-4-java-ee-jaxrs-jboss-spring-security:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: java-${{ matrix.java }} step-4-java-ee-jaxrs-jboss-spring-security
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.node
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/setup-node@v1
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: hash docker 2>/dev/null || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: sudo apt-get install -y httpie
    - run: npm i -g wait-port
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-4-java-ee-jaxrs-jboss-spring-security
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-4-java-ee-jaxrs-jboss-spring-security docker:build docker:start
    - run: ( bash $GITHUB_WORKSPACE/step-4-java-ee-jaxrs-jboss-spring-security/target/*jar & ) || echo ...
    - run: wait-port 8080
    - run: http get :8080
    - run: http get :8080/app/
    - run: http get :8080/app/api/health
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-4-test-java-ee-jboss-spring-security -Dgroups=e2e
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-4-java-ee-jaxrs-jboss-spring-security docker:stop docker:remove
  step-5-jdbc-authentication:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: java-${{ matrix.java }} step-5-jdbc-authentication
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
          ${{ runner.os }}-
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: command -v docker >/dev/null 2>&1 || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: sudo apt-get install -y curl
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-jdbc-authentication clean package spring-boot:build-image docker-compose:up
    - run: while ! [[ `curl -s -o /dev/null -w "%{http_code}" 0:8080/actuator/health` -eq 200 ]] ; do sleep 1s ; echo -n '.' ; done
    - run: sleep 5s
    - run: curl 0:8080
    - run: curl 0:8080/actuator/health
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-test-jdbc -Dgroups=e2e
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-jdbc-authentication docker-compose:down
  step-5-spring-data-jdbc-authentication:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: java-${{ matrix.java }} step-5-spring-data-jdbc-authentication
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
          ${{ runner.os }}-
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: command -v docker >/dev/null 2>&1 || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: sudo apt-get install -y curl
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-spring-data-jdbc-authentication clean package spring-boot:build-image docker-compose:up
    - run: while ! [[ `curl -s -o /dev/null -w "%{http_code}" 0:8080/actuator/health` -eq 200 ]] ; do sleep 1s ; echo -n '.' ; done
    - run: sleep 5s
    - run: curl 0:8080
    - run: curl 0:8080/actuator/health
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-test-jdbc -Dgroups=e2e
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-spring-data-jdbc-authentication docker-compose:down
  step-5-spring-data-jpa-authentication:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: java-${{ matrix.java }} step-5-spring-data-jpa-authentication
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/mvnw') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          ${{ runner.os }}-maven-
          ${{ runner.os }}-node-
          ${{ runner.os }}-npm-
          ${{ runner.os }}-
          ${{ runner.os }}-
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: command -v docker >/dev/null 2>&1 || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: sudo apt-get install -y curl
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-spring-data-jpa-authentication clean package spring-boot:build-image docker-compose:up
    - run: while ! [[ `curl -s -o /dev/null -w "%{http_code}" 0:8080/actuator/health` -eq 200 ]] ; do sleep 1s ; echo -n '.' ; done
    - run: sleep 5s
    - run: curl 0:8080
    - run: curl 0:8080/actuator/health
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-test-jdbc -Dgroups=e2e
    - run: cd $GITHUB_WORKSPACE && ./mvnw -f step-5-spring-data-jpa-authentication docker-compose:down

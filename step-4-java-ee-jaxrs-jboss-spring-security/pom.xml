<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.giuthub.daggerok</groupId>
  <artifactId>step-4-java-ee-jaxrs-jboss-spring-security</artifactId>
  <name>${project.artifactId}</name>
  <packaging>war</packaging>
  <version>1.0.5</version>
  <properties>
    <encoding>UTF-8</encoding>
    <java.version>1.8</java.version>
    <json.version>1.1.4</json.version>
    <jaxb.version>2.3.1</jaxb.version>
    <activation.version>1.1.1</activation.version>
    <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
    <docker-maven-plugin.version>0.33.0</docker-maven-plugin.version>
    <jakarta.jakartaee-api.version>8.0.0</jakarta.jakartaee-api.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <resteasy-json-p-provider.version>4.5.3.Final</resteasy-json-p-provider.version>
    <spring-security-web.version>4.2.15.RELEASE</spring-security-web.version><!-- use < 5.x only! -->
    <!--<spring-security-web.version>5.3.1.RELEASE</spring-security-web.version>-->
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>${jakarta.jakartaee-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-json-p-provider</artifactId>
      <version>${resteasy-json-p-provider.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
      <version>${json.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>${json.version}</version>
    </dependency>
    <!--<dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${spring-security-web.version}</version>
    </dependency>-->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring-security-web.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-taglibs</artifactId>
      <version>${spring-security-web.version}</version>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>clean package</defaultGoal>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <encoding>${encoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${encoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <follow>false</follow>
          <verbose>true</verbose>
          <useColor>true</useColor>
          <logDate>default</logDate>
          <autoPull>always</autoPull>
          <keepRunning>false</keepRunning>
          <watchInterval>500</watchInterval>
          <allContainers>true</allContainers>
          <removeVolumes>true</removeVolumes>
          <autoCreateCustomNetworks>false</autoCreateCustomNetworks>
          <images>
            <image>
              <name>daggerok/${project.artifactId}:${project.version}</name>
              <build>
                <dockerFileDir>${project.basedir}</dockerFileDir>
                <filter>@</filter>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
              </build>
              <run>
                <imagePullPolicy>Never</imagePullPolicy>
                <ports>
                  <port>8080:8080</port>
                </ports>
                <wait>
                  <http>
                    <url>http://127.0.0.1:8080/app/</url>
                    <method>GET</method>
                    <status>200..399</status>
                  </http>
                  <healthy>true</healthy>
                  <time>35000</time>
                  <shutdown>500</shutdown>
                </wait>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <!--<profiles>
    <profile>
      <id>jdk9+</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <dependencies>
        <dependency>
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
          <version>${activation.version}</version>
        </dependency>
        <dependency>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
          <version>${jaxb.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <release>${java.version}</release>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>-->
</project>
